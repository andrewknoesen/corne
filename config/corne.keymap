/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;  // Lower and Raise layers
            then-layer = <3>;   // Adjust layer
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
                &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                          &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
            >;
        };

        lower_layer {
            bindings = <
                &kp TAB    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5      &kp N6   &kp N7   &kp N8    &kp N9    &kp N0  &kp BSPC
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
                &kp LSHFT  &trans    &trans    &trans    &trans    &trans      &trans   &trans   &trans   &trans    &trans   &trans
                          &kp LGUI &trans   &kp SPACE      &kp RET  &trans   &kp RALT
            >;
        };

        raise_layer {
            bindings = <
                &kp TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR &kp BSPC
                &kp LCTRL &trans  &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
                &kp LSHFT &trans  &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                          &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
            >;
        };

        adjust_layer {
             bindings = <
                &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &kp K_MUTE           &trans          &trans          &trans            &trans           &trans  &kp C_SLEEP
                &trans  &kp A  &kp A     &kp A     &kp A     &kp C_VOLUME_UP      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP      &mmv MOVE_RIGHT  &kp A  &kp A
                &kp A  &kp A  &kp A     &kp A     &kp A     &kp C_VOLUME_DOWN    &kp A          &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT       &kp A  &trans
                          &trans     &trans     &trans               &trans          &trans          &trans
            >;
        };
    };

    chosen {
        zmk,battery = &vbatt;
        zmk,deep-sleep = <300000>;    // 5 minutes to deep sleep
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "BATTERY";
    };

};